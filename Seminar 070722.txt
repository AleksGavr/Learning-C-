// Задача 70: Напишите программу, которая на вход принимает два числа и выдаёт
// первые N чисел, для которых каждое следующее равно сумме двух предыдущих.
// 3 и 4, N = 5 -> 3 4 7 11 18
// 6 и 10, N = 4 -> 6 10 16 26 

int rec(int n, int x, int y)
{
    if (n == 1)
    {
        return x;
    }
    if (n == 2)
    {
        return y;
    }
    return rec(n - 1, x, y) + rec(n - 2, x, y);
}


/* // Задача 71: В некотором машинном алфавите имеются четыре буквы «а», «и», «с»
// и «в». Покажите все слова, состоящие из n букв, которые можно построить из
// букв этого алфавита.
// n = 2 -> аа, ии, сс, вв, аи, иа, ис, си, ас, са,
// ав, ва, ви, ив, св, вс

Console.Clear();
string[] Words(string[] alf, int number)
{
    if (number == 0)
    {
        string[] res = new string[1];
        res[0] = "";
        return res;
    };

    string[] temp = Words(alf, number - 1);
    string[] result = new string[temp.Length * alf.Length];
    int index = 0;
    for (int i = 0; i < temp.Length; i++)
    {
        for (int j = 0; j < alf.Length; j++)
        {
            result[index] = temp[i] + alf[j];
            index++;
        }
    }
    return result;
} */


// Задача 72: Заданы 2 массива: info и data. В массиве info хранятся двоичные
// представления нескольких чисел (без разделителя). В массиве data хранится
// информация о количестве бит, которые занимают числа из массива info.
// Напишите программу, которая составит массив десятичных представлений чисел
// массива data с учётом информации из массива info.
// 25 мин
// входные данные:
// - data = {0, 1, 1, 1, 1, 0, 0, 0, 1 }
// - info = {2, 3, 3, 1 }
// выходные данные:
// - 1, 7, 0, 1

/* //: Заданы 2 массива: info и data. В массиве info хранятся двоичные представления нескольких чисел (без разделителя).
// В массиве data хранится информация о количестве бит, которые занимают числа из массива info.
// Напишите программу, которая составит массив десятичных представлений чисел массива data с учётом информации из массива info.

void PrintArray(int[] arr)
{ 
    
        for (int i = 0; i < arr.Length; i++)
        {
            Console.Write(arr[i] + " ");
        }
        Console.WriteLine();
    
}


int [] data = {0,0,1,1,0,0,1,1,0};
int [] info = {2,3,3,1};

int [] cdata = new int [info.Length];

int k=0;

for (int i = 0; i < info.Length; i++)
{
    for (int j = info[i]-1, m=0; j >= 0; j--,m++)
    {
        
        Console.Write($"{data[m+k]}");

        
        cdata[i]+=(int)(data[j+k]*Math.Pow(2,m));
        
    }
        
    k+=info[i];
    Console.WriteLine();
}
PrintArray(cdata);
 */


string[] alf = { "а", "с", "и", "в", "Ж" };
Console.WriteLine("Введите N");
int number = int.Parse(Console.ReadLine());
Console.WriteLine();
string[] result = Words(alf, number);

for (int i = 0; i < result.Length; i++)
{
    Console.Write(i + " " + result[i] + " ");
}
